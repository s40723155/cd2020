<h1>About</h1>
<p>此內容管理系統以 <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作.</p>
<h4>利用 cmsimde 建立靜態網誌方法:</h4>
<p>1. 在 github 建立倉儲, git clone 到近端</p>
<p>2. 參考 <a href="https://github.com/mdecourse/newcms">https://github.com/mdecourse/newcms</a>, 加入除了 cmsimde 目錄外的所有內容</p>
<p>以 git submodule add <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> cmsimde</p>
<p>建立 cmsimde 目錄, 並從 github 取下子模組內容.</p>
<p>3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器.</p>
<p>動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端.</p>
<p>4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行:</p>
<p>git clone --recurse-submodules <a href="https://github.com/mdecourse/newcms.git">https://github.com/mdecourse/newcms.git</a></p>
<h1>Develop</h1>
<p><a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443 就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容.</p>
<p>cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版.</p>
<p>init.py 位於  up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數.</p>
<h1>Webots tutorial 翻譯內容</h1>
<h2><span style="color: #808080;">Propeller</span></h2>
<h2><span lang="EN-US" style="font-size: 24.0pt; font-family: '微軟正黑體','sans-serif'; color: #0e6f8c; font-weight: normal;"><span style="color: #808080;">RotationalMotor</span><o:p></o:p></span></h2>
<h2>Speaker</h2>
<h2>Track</h2>
<h1>每週進度</h1>
<h2>week1</h2>
<p>創建個人倉儲及架設網站</p>
<p><span style="color: #0000ff;">(1)CD2020個人倉儲</span></p>
<p><img alt="" height="435" src="/images/倉儲.jpg" width="906"/></p>
<p><span style="color: #0000ff;">(2)cmsimde網站</span></p>
<p><img alt="" height="483" src="/images/網站.jpg" width="911"/></p>
<p></p>
<h2>week2</h2>
<p>組長創建小組倉儲<a href="https://github.com/s40723155/cd2020-ag1">https://github.com/s40723155/cd2020-ag1</a>，個組員進行Fork</p>
<p></p>
<p>小組長亂數分組，分配各項工作給組員</p>
<p><img alt="" height="378" src="/images/w2分配工作流程表.jpg" width="379"/></p>
<p></p>
<h2>week3</h2>
<p><span style="color: #ff0000;">更新python3.8.2</span></p>
<p><span style="color: #000000;">1.輸入網址<a href="https://www.python.org/downloads/release/python-382/">https://www.python.org/downloads/release/python-382/</a></span></p>
<p><span style="color: #000000;">2.下載檔案<a href="https://s40723114.github.io/get_page/python%20%E6%9B%B4%E6%96%B0%E8%87%B33.8.2/Windows%20x86-64%20executable%20installer">Windows x86-64 executable installer</a></span></p>
<p><span style="color: #000000;">3.<span>完成後開啟下載的檔案，選擇Customize installation選項</span></span></p>
<p><span style="color: #000000;"><span><img alt="" height="419" src="/images/1 (1).png" width="682"/></span></span></p>
<p><span style="color: #000000;"><span></span></span>4.<span>不勾選pip，接續按下next</span></p>
<p><span><img alt="" height="422" src="/images/3.png" width="683"/></span></p>
<p><span>5.選擇路徑將python安裝至可攜式系統中的Y槽下</span></p>
<p><span>6.開啟start_mdecourse.bat批次檔</span></p>
<p><span>7.將<span>start_mdecourse.bat批次檔中的py373改為安裝python 3.8.2版本的資料夾</span></span></p>
<p><span><span>8.</span></span><span>將安裝之資料夾取名為py382</span></p>
<p><span><img alt="" height="467" src="/images/2.png" width="762"/></span></p>
<p><span>執行stop.bat批次檔後重新啟動start_mdecourse(為了讓檔案重新讀取)</span></p>
<p>9.輸入get-pip.py，開始安裝pip工具</p>
<p>10.安裝cmsimde所需模組</p>
<p><img alt="" height="21" src="/images/4.png" width="563"/></p>
<p><span>11.進行檢驗是否更新至 </span><span style="color: #ff0000;">python 3.8.2</span></p>
<p><span style="color: #ff0000;"><img alt="" height="69" src="/images/6.png" width="755"/></span></p>
<h2>week5</h2>
<p></p>
<p></p>
<p></p>